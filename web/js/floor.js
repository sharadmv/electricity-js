// Generated by CoffeeScript 1.3.3
(function() {
  var createDevices, createFloor, createHtml, setupMouseDownEvents;

  $(document).ready(function() {
    var Path, Rectangle, canvas;
    Path = paper.Path, Rectangle = paper.Rectangle;
    createHtml();
    canvas = document.getElementById('floor-plan');
    paper.setup(canvas);
    createFloor();
    createDevices();
    setupMouseDownEvents();
    return paper.view.draw();
  });

  createHtml = function() {
    var htmlStr;
    htmlStr = thermos.render(function() {
      this.h1('Electricity.js');
      return this.div("#content", function() {
        this.div('#bottom-panel', function() {
          this.span('#id-label', '5');
          this.span('#name-label', 'Mac');
          this.span('#type-label', 'Computer');
          return this.input({
            'type': 'button',
            'value': 'toggle',
            'id': 'toggle-btn'
          });
        });
        return this.canvas({
          'id': 'floor-plan',
          'resize': ''
        });
      });
    });
    $('#main').html(htmlStr);
    return $('#toggle-btn').click(function() {
      return $.post('http://192.168.1.179:8080/api/1', {
        'method': 'toggle'
      }, function(data) {
        console.log('crap');
        return console.log(data);
      });
    });
  };

  createFloor = function() {
    var myPath, room1, room2, room3, room4;
    myPath = new paper.Path();
    myPath.strokeColor = 'black';
    myPath.add(new paper.Point(10, 90));
    myPath.add(new paper.Point(200, 90));
    myPath.add(new paper.Point(200, 20));
    myPath.add(new paper.Point(250, 0));
    myPath.add(new paper.Point(300, 20));
    myPath.add(new paper.Point(300, 90));
    myPath.add(new paper.Point(400, 90));
    myPath.add(new paper.Point(450, 90));
    myPath.add(new paper.Point(800, 90));
    myPath.add(new paper.Point(800, 390));
    myPath.add(new paper.Point(10, 390));
    myPath.closed = true;
    room1 = new paper.Path.Rectangle([10, 90], [190, 140]);
    room2 = new paper.Path.Rectangle([10, 230], [190, 160]);
    room3 = new paper.Path.Rectangle([400, 230], [190, 160]);
    room4 = new paper.Path.Rectangle([590, 230], [210, 160]);
    room1.strokeColor = 'black';
    room1.fillColor = '#cccccc';
    room2.strokeColor = 'black';
    room3.strokeColor = 'black';
    return room4.strokeColor = 'black';
  };

  createDevices = function() {
    var aCircle, circle, circles, i, originalRadius, scale, _i, _len, _results;
    circles = [[200, 300], [400, 200], [700, 340]];
    _results = [];
    for (_i = 0, _len = circles.length; _i < _len; _i++) {
      circle = circles[_i];
      aCircle = new paper.Path.Circle(circle, 20);
      aCircle.strokeColor = "blue";
      aCircle.fillColor = "blue";
      aCircle.name = "circle";
      console.log(aCircle._id);
      i = 0;
      originalRadius = aCircle.bounds.width / 2;
      scale = 1.01;
      _results.push((function(aCircle) {
        return paper.view.onFrame = function() {
          var radius;
          radius = aCircle.bounds.width / 2;
          if ((radius / originalRadius) > 2) {
            scale = 0.99;
          }
          if ((radius / originalRadius) < 1) {
            scale = 1.01;
          }
          return aCircle.scale(scale);
        };
      })(aCircle));
    }
    return _results;
  };

  setupMouseDownEvents = function() {
    var hitOptions, hitTool;
    hitOptions = {
      segments: true,
      stroke: true,
      fill: true,
      tolerance: 5
    };
    hitTool = new paper.Tool();
    hitTool.activate();
    return hitTool.onMouseDown = function(event) {
      var hitResult, path;
      console.log('mouse down');
      hitResult = paper.project.hitTest(event.point, hitOptions);
      if (hitResult) {
        path = hitResult.item;
        console.log(path._id);
        $('#bottom-panel-id').text(path._id);
        return window.gCurrId = path._id;
      }
    };
  };

}).call(this);
